这里有2019年最新的Python最常见的180道面试题解析。
当你发现这些题你差不多都能回答上来，那说明你的水平已经可以去面试工作了。

网上有网友搜集了 180 道 2019 年最新的 Python 面试题解析，让你最短时间内掌握核心知识点，一举通过Python 面试！

1.列出 5 个常用 Python 标准库？

math re os sys time collections queue random

2.Python 内建数据类型有哪些？

数字、字符串、列表、元组、字典、文件、集合
数字：数值
字符串，列表，元组：序列
字典：对应
文件：扩展
集合

3.简述 with 方法处理打开文件时帮我们做了什么？

尝试打开，打开异常；尝试操作，操作异常；关闭句柄

with open("xxx") as file:
    data = file.read()

try:
    f = open('xxx')
except:
    print 'fail to open'
    exit(-1)
try:
    do something
except:
    do something
finally:
     f.close()

4.列出 Python 中可变数据类型和不可变数据类型，为什么？

可变数据类型：列表list，字典dict
不可变数据类型：整型int，浮点型float，字符串型string，元组tuple

不可变数据类型：变量的值发生了改变，内存地址也会发生改变。
可变数据类型：变量的值发生了改变，内存地址不发生改变。
（同一个内存地址是否可以存变化的数据）

5.Python 获取当前日期？

time.ctime()

time.time()返回当前时间戳
time.localtime([secs])接收时间戳，返回当地时间元组
time.ctime([secs])接收时间戳，返回可读字符串
time.asctime(tupletime)接收时间元组，返回可读字符串

6.统计字符串每个单词出现的次数

collections.Counter(str)

7.用 python 删除文件和用 linux 命令删除文件方法

os.remove(path)
rm -rf path

-r 向下递归 -f 强制删除

8.写一段自定义异常代码

class CustomError(Exception):
    def __init__(self,n):  
        self.n=n
try:
    n=input("isdigit?")
    if not n.isdigit():
        raise CustomError(n) #使用raise语句自己触发异常
except CustomError:
    print("Error")
else:
    print("OK")

9.举例说明异常模块中 try except else finally 的相关意义
try:
  ...#正常操作
except ERROR:
  ...#如果引发了异常，可以不带任何一场类型使用except
else:
  ...#如果没有异常发生
finally:
  ...#退出try时总会执行

10.遇到 bug 如何处理

语法，缩进，逻辑，debug

语言特性

11.谈谈对 Python 和其他语言的区别

以空间为代价优化时间，各种语法糖，标准库，解释型语言（非编译型），强制缩进，仅用一种方法解决问题

12.简述解释型和编译型编程语言

解释型语言：程序不需要编译，程序在运行时才翻译成机器语言，每执行一次都要翻译一次。
编译型语言：程序在执行之前需要一个专门的编译过程，把程序编译成为机器语言的文件，运行时不需要重新翻译，直接使用编译的结果。

13.Python 的解释器种类以及相关特点？

当我们编写Python代码时，我们得到的是一个包含Python代码的以.py为扩展名的文本文件。要运行代码，就需要Python解释器去执行.py文件。
Python 解释器有 CPython、IPython、Jython、PyPy 等。

CPython 就是用 C 语言开发的了，是官方标准实现，拥有良好的生态，所以应用也就最为广泛了。
IPython 是在 CPython 的基础之上在交互式方面得到增强的解释器。
Jython 是专为 Java 平台设计的 Python 解释器，它把 Python 代码编译成 Java 字节码执行。
PyPy 是 Python 语言（2.7.13和3.5.3）的一种快速、兼容的替代实现，以速度快著称。

14.说说你知道的Python3 和 Python2 之间的区别？

print(): py3 function, py2 class
input(), raw_input(): py3 input()->str, py2 input()->int, raw_input()->str
xrange(),range()

15.Python3 和 Python2 中 int 和 long 区别？

python3 只有int类型
python2 有int,long类型

16.xrange 和 range 的区别？

python3 没有xrange

编码规范

17.什么是 PEP8?

Python Enhancement Proposal
第8号增强提案（PEP 8）是针对Python语言编订的代码风格指南。
代码布局，字符串引号，表达式和语句中的空格，注释，命名规范，编程建议


18.了解 Python 之禅么？

import this

19.了解 docstring 么？

文档字符串
docstring使用三个双引号（”），triple double quote for docstring
docstring可以写在三个地方：模块或包，对象，函数。
help()函数输出文档

20.了解类型注解么？

def add(x,y):
    '''
    :param x: int
    :param y: int
    :return: int
    '''

21.例举你知道 Python 对象的命名规范，例如方法或者类等

module_name, package_name, ClassName, method_name, ExceptionName, function_name, GLOBAL_VAR_NAME, instance_var_name, function_parameter_name, local_var_name

总使用“self”作为实例方法的第一个参数。总使用“cls”作为类方法的第一个参数。
myFunction ThisClass xxxERROR CONSTANT _private_func

22.Python 中的注释有几种？

单行注释，单引号，双引号

23.如何优雅的给一个函数加注释？

1、功能
2、args：类型，含义
3、returns：类型，含义，examples
4、raises ERROR

24.如何给变量加注释？

将相同提示附加到变量的语法

25.Python 代码缩进中是否支持 Tab 键和空格混用。

只用空格

26.是否可以在一句 import 中导入多个库?

可以，但不推荐

27.在给 Py 文件命名的时候需要注意什么?

不要与模块的名字重合

28.例举几个规范 Python 代码风格的工具

autopep8, pylint

数据类型
字符串

29.列举 Python 中的基本数据类型？

数字，字符串，列表，元组，文件，字典，集合

30.如何区别可变数据类型和不可变数据类型

可变数据类型：同一个内存空间存储内容可变。列表，字典
不可变数据类型：同一个内存空间存储内容不可变。数字（整型，浮点型），字符串，元组

31.将"hello world"转换为首字母大写"Hello World"

a = "hello world"
b = ' '.join(i.capitalize() for i in a.split(' ')) 
print(b)

re:
import re
a = "hello world"

def repl(m):
    return m.group(1)+m.group(2).upper()

b = re.sub("(^|\s)(\S)", repl, a)
print(b)


32.如何检测字符串中只含有数字?

str.isdigit()

33.将字符串"ilovechina"进行反转

a="ilovechina"
print(a[::-1])

34.Python 中的字符串格式化方式你知道哪些？

%,{},''.format()

35.有一个字符串开头和末尾都有空格，比如“ adabdw ”,要求写一个函数把这个字符串的前后空格都去掉。

def str_strip(s):
    return s.strip()
    
re:
re.sub("(^\s+)|(\s+$)", '', s)

36.获取字符串”123456“最后的两个字符。

a="123456"
print(a[-2:])

re:
re.search("\S{2}$",s).group(0)

37.一个编码为 GBK 的字符串 S，要将其转成 UTF-8 编码的字符串，应如何操作？

S.decode('gbk').encode('utf-8')

38. (1)s="info：xiaoZhang 33 shandong"，用正则切分字符串输出['info', 'xiaoZhang', '33', 'shandong'](2) a = "你好 中国 "，去除多余空格只留一个空格。

(1)
re.split("(\W+)",s)
#re.findall("(\w+)",s)

(2)
re.sub("\s+", ' ', s)

re.match(pattern, string, flags=0)
re.search(pattern, string, flags=0)
re.sub(pattern, repl, string, count=0, flags=0)
re.compile(pattern[, flags])
re.findall(string[, pos[, endpos]])
re.finditer(pattern, string, flags=0)
re.split(pattern, string[, maxsplit=0, flags=0])

39. (1)怎样将字符串转换为小写 (2)单引号、双引号、三引号的区别？

(1)
s.lower()

#str.swapcase() 大小写同时互换

def repl(m):
    if m.group(1):
        return m.group(1).upper()
    if m.group(2):
        return m.group(2).lower()

b=re.sub("([a-z])|([A-Z])",repl,s)
print(b)

(2)
单引号，双引号同用法
三引号所见即所得，或多行注释

列表

40.已知 AList = [1,2,3,1,2],对 AList 列表元素去重，写出具体过程。

AList=[1,2,3,1,2]
B=[]
L=collections.Counter(AList)
for i in L.items():
    B.append(i[0])
print(B)

41.如何实现 "1,2,3" 变成 ["1","2","3"]

a="1,2,3"
l=[]
for i in a:
    if i.isdigit():
        l.append(i)
print(l)

42.给定两个 list，A 和 B，找出相同元素和不同元素

C=[x for x in A if x in B]
D=[y for y in (A+B) if y not in C]

43.[[1,2],[3,4],[5,6]]一行代码展开该列表，得出[1,2,3,4,5,6]

a=[[1,2],[3,4],[5,6]]
x=[j for i in a for j in i]

44.合并且排序两无序列表[3,1,9,7,5]和[8,4,2,6]

C=A+B
C.sort()
print(C)

45.如何打乱一个列表的元素？

import random

x = [i for i in range(10)]
random.shuffle(x)
print(x)

字典

46.字典操作中 del 和 pop 有什么区别

del 全局方法，pop 字典方法

dict.pop(key)  必须给出key，返回被删除的值
del dict[key]  给出key,删除单一条目
del dict  删除字典

47.按照字典内的年龄排序
d1=[
    {'name':'alice', 'age':38},
    {'name':'bob', 'age':18},
    {'name':'carl', 'age':28},
]

sorted_d1 = sorted(d1, key=operator.itemgetter('age'))

48.请合并下面两个字典 a = {"A":1,"B":2},b = {"C":3,"D":4}

a.update(b)

？49.如何使用生成式的方式生成一个字典，写一段功能代码。

d2={k : v for k,v in d1.items()}
？？？？？？？？？？？

50.如何把元组("a","b")和元组(1,2)，变为字典{"a":1,"b":2}

t1=("a","b")
t2=(1,2)

d3={t1[i]:t2[i] for i in range(len(t1))}
print(d3)


综合

？51.Python 常用的数据结构的类型及其特性？
A={1:0, 2:0, 3:0}
B={"a":0, "b":0, "c":0}
C={(1,2):0, (2,3):0}
D={[1,2]:0, [2,3]:0}

数字，字符串，列表，元组，字典，文件，集合
特性：序列/映射/集合，可变/不可变，可迭代
？？？？？？？？？？

52.如何交换字典 {"A"：1,"B"：2}的键和值？

d1={"A":1, "B":2}
d2={v:k for k,v in d1.items()}

53.Python 里面如何实现 tuple 和 list 的转换？

l=list(t)
#l=[i for i in t]
t=tuple(l)

54.我们知道对于列表可以使用切片操作进行部分元素的选择，那么如何对生成器类型的对象实现相同的功能呢？

itertools模块下的islice方法

for x in islice(Fib(), 10, 20):
    print(x)

55.请将[i for i in range(3)]改成生成器

(i for i in range(3))

56.a="hello"和 b="你好"编码成 bytes 类型

b'hello'  字符串内容都是 ASCII 字符
bytes(a.encoding='utf-8')
a.encode('utf-8')

57.下面的代码输出结果是什么？
a=(1,2,3,[4,5,6,7],8)
a[2]-2

>>>1

58.下面的代码输出的结果是什么?
a=(1,2,3,[4,5,6,7],8)
a[3][0]-2

>>>2

操作类题目

*49.Python 交换两个变量的值
50.在读文件操作的时候会使用 read、readline 或者 readlines，简述它们各自的作用
51.json 序列化时，可以处理的数据类型有哪些？如何定制支持 datetime 类型？
52.json 序列化时，默认遇到中文会转换成 unicode，如果想要保留中文怎么办？
53.有两个磁盘文件 A 和 B，各存放一行字母，要求把这两个文件中的信息合并(按字母顺序排列)，输出到一个新文件 C 中。
54.如果当前的日期为 20190530，要求写一个函数输出 N 天后的日期，(比如 N 为 2，则输出 20190601)。
55.写一个函数，接收整数参数 n，返回一个函数，函数的功能是把函数的参数和 n 相乘并把结果返回。
56.下面代码会存在什么问题，如何改进？
<img src="https://pic2.zhimg.com/50/v2-474f556cb8cd7d2ea7a47b0cba51c9cd_hd.jpg" data-caption="" data-size="normal" data-rawwidth="834" data-rawheight="125" class="origin_image zh-lightbox-thumb" width="834" data-original="https://pic2.zhimg.com/v2-474f556cb8cd7d2ea7a47b0cba51c9cd_r.jpg"/>
57.一行代码输出 1-100 之间的所有偶数。
58.with 语句的作用，写一段代码？
59.python 字典和 json 字符串相互转化方法
60.请写一个 Python 逻辑，计算一个文件中的大写字母数量
61. 请写一段 Python连接 Mongo 数据库，然后的查询代码。
62.说一说 Redis 的基本类型。
63. 请写一段 Python连接 Redis 数据库的代码。
64. 请写一段 Python 连接 MySQL 数据库的代码。
65.了解 Redis 的事务么？
66.了解数据库的三范式么？
67.了解分布式锁么？
68.用 Python 实现一个 Reids 的分布式锁的功能。
69.写一段 Python 使用 Mongo 数据库创建索引的代码。

高级特性

70.函数装饰器有什么作用？请列举说明？
71.Python 垃圾回收机制？
72.魔法函数 __call__怎么使用?
73.如何判断一个对象是函数还是方法？
74.@classmethod 和@staticmethod 用法和区别
75.Python 中的接口如何实现？
76.Python 中的反射了解么?
77.metaclass 作用？以及应用场景？
78.hasattr() getattr() setattr()的用法
79.请列举你知道的 Python 的魔法方法及用途。
80.如何知道一个 Python 对象的类型？
81.Python 的传参是传值还是传址？
82.Python 中的元类(metaclass)使用举例
83.简述 any()和 all()方法
84.filter 方法求出列表所有奇数并构造新列表，a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
85.什么是猴子补丁？
86.在 Python 中是如何管理内存的？
87.当退出 Python 时是否释放所有内存分配？
正则表达式

88.使用正则表达式匹配出<html><h1>百度一下，你就知道</html>中的地址 a="张明 98 分"，用 re.sub，将 98 替换为 100
89.正则表达式匹配中(.*)和(.*?)匹配区别？
90.写一段匹配邮箱的正则表达式

其他内容

91.解释一下 python 中 pass 语句的作用？
92.简述你对 input()函数的理解
93.python 中的 is 和==
94.Python 中的作用域
95.三元运算写法和应用场景？
96.了解 enumerate 么？
97.列举 5 个 Python 中的标准模块
98.如何在函数中设置一个全局变量
99.pathlib 的用法举例
100.Python 中的异常处理，写一个简单的应用场景
101.Python 中递归的最大次数，那如何突破呢？
102.什么是面向对象的 mro
103.isinstance 作用以及应用场景？
104.什么是断言？应用场景？
105.lambda 表达式格式以及应用场景？
106.新式类和旧式类的区别
107.dir()是干什么用的？
108.一个包里有三个模块，demo1.py, demo2.py, demo3.py，但使用 from tools import *导入模块时，如何保证只有 demo1、demo3 被导入了。
109.列举 5 个 Python 中的异常类型以及其含义
110.copy 和 deepcopy 的区别是什么？
111.代码中经常遇到的*args, **kwargs 含义及用法。
112.Python 中会有函数或成员变量包含单下划线前缀和结尾，和双下划线前缀结尾，区别是什么?
113.w、a+、wb 文件写入模式的区别
114.举例 sort 和 sorted 的区别
115.什么是负索引？
116.pprint 模块是干什么的？
117.解释一下 Python 中的赋值运算符
118.解释一下 Python 中的逻辑运算符
119.讲讲 Python 中的位运算符
120.在 Python 中如何使用多进制数字？
121.怎样声明多个变量并赋值？

算法和数据结构
122.已知：
<img src="https://pic4.zhimg.com/50/v2-f78e20b47b593dc30d2892c34e1c5a7b_hd.jpg" data-caption="" data-size="normal" data-rawwidth="832" data-rawheight="53" class="origin_image zh-lightbox-thumb" width="832" data-original="https://pic4.zhimg.com/v2-f78e20b47b593dc30d2892c34e1c5a7b_r.jpg"/>
(1) 从 AList 和 BSet 中 查找 4，最坏时间复杂度那个大？
(2) 从 AList 和 BSet 中 插入 4，最坏时间复杂度那个大？
123.用 Python 实现一个二分查找的函数
124.python 单例模式的实现方法
125.使用 Python 实现一个斐波那契数列
126.找出列表中的重复数字
127.找出列表中的单个数字
128.写一个冒泡排序
129.写一个快速排序
130.写一个拓扑排序
131.python 实现一个二进制计算
132.有一组“+”和“-”符号，要求将“+”排到左边，“-”排到右边，写出具体的实现方法。
133.单链表反转
134.交叉链表求交点
135.用队列实现栈
136.找出数据流的中位数
137.二叉搜索树中第 K 小的元素
爬虫相关

138.在 requests 模块中，requests.content 和 requests.text 什么区别
139.简要写一下 lxml 模块的使用方法框架
140.说一说 scrapy 的工作流程
141.scrapy 的去重原理
142.scrapy 中间件有几种类，你用过哪些中间件
143.你写爬虫的时候都遇到过什么？反爬虫措施，你是怎么解决的？
144.为什么会用到代理？
145.代理失效了怎么处理？
146.列出你知道 header 的内容以及信息
147.说一说打开浏览器访问 百度一下，你就知道 获取到结果，整个流程。
148.爬取速度过快出现了验证码怎么处理
149.scrapy 和 scrapy-redis 有什么区别？为什么选择 redis 数据库？
150.分布式爬虫主要解决什么问题
151.写爬虫是用多进程好？还是多线程好？ 为什么？
152.解析网页的解析器使用最多的是哪几个
153.需要登录的网页，如何解决同时限制 ip，cookie,session（其中有一些是动态生成的）在不使用动态爬取的情况下？
154.验证码的解决（简单的：对图像做处理后可以得到的，困难的：验证码是点击，拖动等动态进行的？）
155.使用最多的数据库（mysql，mongodb，redis 等），对他的理解？

网络编程

156.TCP 和 UDP 的区别？
157.简要介绍三次握手和四次挥手
158.什么是粘包？ socket 中造成粘包的原因是什么？ 哪些情况会发生粘包现象？

并发

159.举例说明 conccurent.future 的中线程池的用法
160.说一说多线程，多进程和协程的区别。
161.简述 GIL
162.进程之间如何通信
163.IO 多路复用的作用？
164.select、poll、epoll 模型的区别？
165.什么是并发和并行？
166.一个线程 1 让线程 2 去调用一个函数怎么实现？
167.解释什么是异步非阻塞？
168.threading.local 的作用？

Git 面试题

169.说说你知道的 git 命令
170.git 如何查看某次提交修改的内容


————————————————
版权声明：本文为CSDN博主「CSDN学院官方账号」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/csdngkk/article/details/99116607
文章转载自CSDN博客
